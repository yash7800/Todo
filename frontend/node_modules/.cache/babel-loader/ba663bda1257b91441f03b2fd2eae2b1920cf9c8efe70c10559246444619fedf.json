{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\todo\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport TodoList from './TodoList';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`${API_URL}/todos`);\n      if (!response.ok) throw new Error('Failed to fetch todos');\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      setMessage('Failed to load todos. Please try again.');\n    }\n  };\n  const addTodo = async () => {\n    if (!newTodo.trim()) {\n      setMessage('Todo text cannot be empty');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_URL}/todos`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: newTodo\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add todo');\n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n      setMessage('Todo added successfully!');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n      setMessage(error.message || 'Failed to add todo');\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`${API_URL}/todos/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete todo');\n      setTodos(todos.filter(todo => todo.id !== id));\n      setMessage('Todo deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      setMessage(error.message || 'Failed to delete todo');\n    }\n  };\n  const summarizeTodos = async () => {\n    setIsLoading(true);\n    setMessage('');\n    try {\n      const response = await fetch(`${API_URL}/summarize`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate summary');\n      }\n      const data = await response.json();\n      setMessage(data.success ? 'Summary sent to Slack successfully!' : data.error);\n    } catch (error) {\n      console.error('Error summarizing todos:', error);\n      setMessage(error.message || 'Failed to send summary to Slack');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') addTodo();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Summary Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo,\n        onChange: e => {\n          setNewTodo(e.target.value);\n          setMessage('');\n        },\n        onKeyPress: handleKeyPress,\n        placeholder: \"Add a new todo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onDelete: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"summarize-btn\",\n      onClick: summarizeTodos,\n      disabled: isLoading,\n      children: isLoading ? 'Sending...' : 'Summarize and Send to Slack'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('success') ? 'success' : 'error'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PxVCmXWyjomVBEdxz/GMAH0t3DQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","message","setMessage","isLoading","setIsLoading","API_URL","process","env","REACT_APP_API_URL","fetchTodos","response","fetch","ok","Error","data","json","error","console","addTodo","trim","method","headers","body","JSON","stringify","text","deleteTodo","id","filter","todo","summarizeTodos","errorData","success","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyPress","placeholder","onClick","onDelete","disabled","includes","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/todo/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport TodoList from './TodoList';\nimport './styles.css';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000';\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch(`${API_URL}/todos`);\n      if (!response.ok) throw new Error('Failed to fetch todos');\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      setMessage('Failed to load todos. Please try again.');\n    }\n  };\n\n  const addTodo = async () => {\n    if (!newTodo.trim()) {\n      setMessage('Todo text cannot be empty');\n      return;\n    }\n    \n    try {\n      const response = await fetch(`${API_URL}/todos`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: newTodo })\n      });\n      \n      if (!response.ok) throw new Error('Failed to add todo');\n      \n      const data = await response.json();\n      setTodos([...todos, data]);\n      setNewTodo('');\n      setMessage('Todo added successfully!');\n    } catch (error) {\n      console.error('Error adding todo:', error);\n      setMessage(error.message || 'Failed to add todo');\n    }\n  };\n\n  const deleteTodo = async (id) => {\n    try {\n      const response = await fetch(`${API_URL}/todos/${id}`, { \n        method: 'DELETE' \n      });\n      \n      if (!response.ok) throw new Error('Failed to delete todo');\n      \n      setTodos(todos.filter(todo => todo.id !== id));\n      setMessage('Todo deleted successfully!');\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n      setMessage(error.message || 'Failed to delete todo');\n    }\n  };\n\n  const summarizeTodos = async () => {\n    setIsLoading(true);\n    setMessage('');\n    \n    try {\n      const response = await fetch(`${API_URL}/summarize`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate summary');\n      }\n      \n      const data = await response.json();\n      setMessage(data.success ? 'Summary sent to Slack successfully!' : data.error);\n    } catch (error) {\n      console.error('Error summarizing todos:', error);\n      setMessage(error.message || 'Failed to send summary to Slack');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') addTodo();\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Todo Summary Assistant</h1>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => {\n            setNewTodo(e.target.value);\n            setMessage('');\n          }}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Add a new todo...\"\n        />\n        <button onClick={addTodo}>Add</button>\n      </div>\n      \n      <TodoList todos={todos} onDelete={deleteTodo} />\n      \n      <button \n        className=\"summarize-btn\" \n        onClick={summarizeTodos}\n        disabled={isLoading}\n      >\n        {isLoading ? 'Sending...' : 'Summarize and Send to Slack'}\n      </button>\n      \n      {message && (\n        <div className={`message ${message.includes('success') ? 'success' : 'error'}`}>\n          {message}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}